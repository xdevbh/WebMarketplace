@using WebMarketplace.Orders

<Badge Color="@Color">
    @Status.ToString()
</Badge>

@code {
    [Parameter] public OrderStatus Status { get; set; }
    public Color Color { get; set; } = Color.Primary;

    protected override async Task OnParametersSetAsync()
    {
        switch (Status)
        {
            case OrderStatus.Cancelled:
                Color = Color.Danger;
                break;
            case OrderStatus.New:
                Color = Color.Primary;
                break;
            case OrderStatus.Processing:
                Color = Color.Info;
                break;
            case OrderStatus.Shipped:
                Color = Color.Info;
                break;
            case OrderStatus.Delivered:
                Color = Color.Info;
                break;
            case OrderStatus.Completed:
                Color = Color.Success;
                break;
            case OrderStatus.Refunded:
                Color = Color.Dark;
                break;
            case OrderStatus.Failed:
                Color = Color.Dark;
                break;
        }

        await base.OnParametersSetAsync();
    }
    
}