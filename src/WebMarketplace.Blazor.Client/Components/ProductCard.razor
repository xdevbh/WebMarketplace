@using Microsoft.Extensions.Options
@using Volo.Abp.UI.Navigation.Urls
@using WebMarketplace.Orders
@using WebMarketplace.Products
@inject NavigationManager NavigationManager
@inject IProductBuyerAppService ProductBuyerAppService

<Card Class="product-card">
    <CardImage Src="@ImageUrl" @onclick="OpenProductPage"/>
    <CardBody @onclick="OpenProductPage">
        <CardTitle>@Product.Name</CardTitle>
        <CardSubtitle>@RoundedPriceAmount @Product.PriceCurrency</CardSubtitle>
        <Rating @bind-SelectedValue="@RaingInt" Max="5" ReadOnly="true" Color="Color.Warning"/>
        <CardText Class="description-text">@Product.ShortDescription</CardText>
    </CardBody>
    <CardFooter>
        <Button Color="Color.Primary" @onclick="AddToCart">Добавить в корзину</Button>
    </CardFooter>
</Card>

@code {
    [Parameter] public ProductCardDto Product { get; set; }
    private string ImageUrl { get; set; }
    public int RaingInt { get; set; }
    public decimal RoundedPriceAmount { get; set; }
    
    private void OpenProductPage()
    {
        NavigationManager.NavigateTo($"/product/{Product.Id}");
    }

    private void AddToCart()
    {
        Console.WriteLine($"Товар {Product.Name} добавлен в корзину.");
    }

    protected override async Task OnParametersSetAsync()
    {
        RaingInt = Convert.ToInt32(Math.Round(Product.Rating, 0));
        RoundedPriceAmount = Math.Round(Product.PriceAmount, 2);
        await SetCoverImageUrlAsync();
    }

    private async Task SetCoverImageUrlAsync()
    {
        var imageRemoteStreamContent = await ProductBuyerAppService.GetDefaultImageAsync(Product.Id);
        if (imageRemoteStreamContent.ContentLength <= 0)
        {
            // ImageUrl = "/assets/eh-event.png";
            ImageUrl = "https://via.placeholder.com/300";
            return;
        }

        var tt =  imageRemoteStreamContent.GetStream();
        ImageUrl = tt.ToString();
    }

}