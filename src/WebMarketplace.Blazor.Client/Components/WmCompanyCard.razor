@using WebMarketplace.Companies
@inject NavigationManager NavigationManager

<Card Flex="Flex.Row"
      Width="Width.Px(500)"
      Height="Height.Px(200)">
    <CardImage Source="@ImageUrl"
               Width="Width.Px(200)"
               Height="Height.Is100"
               Style="object-fit: cover; cursor: pointer;"
               @onclick="OpenProductPage"/>
    <CardBody Flex="Flex.Column"
              Style="flex: 1; padding-right: 20px;">
        <Div Flex="Flex.Column.Fill">
            <CardTitle Size="5">
                @GetCompanyName()
            </CardTitle>
            <CardText Style="overflow: hidden; display: -webkit-box; -webkit-box-orient: vertical; -webkit-line-clamp: 2; ">
                @Company.ShortDescription
            </CardText>
        </Div>
        <Small>
            @Company.City, @Company.Country
        </Small>
    </CardBody>
</Card>



@code {
    [Parameter] public CompanyCardDto Company { get; set; }
    
    protected string ImageUrl { get; set; } = string.Empty;

    protected override async Task OnParametersSetAsync()
    {
        await SetCoverImageUrlAsync();
    }

    protected string GetCompanyName()
    {
        if (!Company.DisplayName.IsNullOrWhiteSpace())
        {
            return Company.DisplayName;
        }
        else
        {
            return Company.Name;
        }
    }

    protected string GetCompanyLink()
    {
        return $"/company/{Company.Id}";
    }
    
    protected async Task SetCoverImageUrlAsync()
    {
        if (Company.ImageContent == null || Company.ImageContent.Length <= 0)
        {
            ImageUrl = "https://via.placeholder.com/300";
            return;
        }

        ImageUrl = $"data:{Company.ImageContentType};base64,{Convert.ToBase64String(Company.ImageContent)}";
    }
    
    protected Task OpenProductPage()
    {
        NavigationManager.NavigateTo($"/company/{Company.Id}");
        return Task.CompletedTask;
    }
}