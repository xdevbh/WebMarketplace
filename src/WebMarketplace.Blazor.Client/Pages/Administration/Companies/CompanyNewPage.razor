@page "/administration/company/new"
@using System.Diagnostics
@using Microsoft.AspNetCore.Authorization
@using Microsoft.Extensions.Localization
@using Volo.Abp.AspNetCore.Components.Messages
@using Volo.Abp.AspNetCore.Components.Web
@using WebMarketplace.Addresses
@using WebMarketplace.Companies
@using WebMarketplace.Localization
@using WebMarketplace.Permissions
@attribute [Authorize("AdminOnly")]
@inject IStringLocalizer<WebMarketplaceResource> L
@inject AbpBlazorMessageLocalizerHelper<WebMarketplaceResource> LH
@inject IAuthorizationService AuthorizationService
@inject NavigationManager NavigationManager
@inject ICompanyAdminAppService CompanyAdminAppService
@inject IAddressAppService AddressAppService
@inject IUiMessageService UiMessageService

<PageTitle>@PageTitle</PageTitle>

<Div Flex="Flex.JustifyContent.Between"
     Margin="Margin.Is3.FromBottom">
    <Heading Size="HeadingSize.Is3"
             Flex="Flex.Fill">
        @L["Header:CreateCompany"]
    </Heading>
    <Div Float="Float.End" Flex="Flex.ReverseRow">
        @if (CanCreateCompany)
        {
            <Button Color="Color.Primary"
                    Margin="Margin.Is2.FromEnd"
                    Clicked="() => CreateAsync()">
                <Icon Name="IconName.Save"
                      Margin="Margin.Is1.FromEnd"/>
                @L["Action:Save"]
            </Button>
        }
        <Button Color="Color.Danger"
                Margin="Margin.Is2.FromEnd"
                Clicked="() => GoToList()">
            <Icon Name="IconName.Times"
                  Margin="Margin.Is1.FromEnd"/>
            @L["Action:Cancel"]
        </Button>
    </Div>`
</Div>

<Accordion Margin="Margin.Is3.FromBottom">
    <AccordionItem Visible="true">
        <AccordionHeader>
            <Heading Size="HeadingSize.Is3">
                <AccordionToggle>@L["Header:BasicInfo"]</AccordionToggle>
            </Heading>
        </AccordionHeader>
        <AccordionBody>
            <Validations @ref="@CompanyValidationsRef" Model="@Company" ValidateOnLoad="false">
                <Validation MessageLocalizer="@LH.Localize">
                    <Field>
                        <FieldLabel>@L["Field:CompanyIdentificationNumber"]</FieldLabel>
                        <Addons>
                            <Addon AddonType="AddonType.Start">
                                <AddonLabel>
                                    <Icon Name="IconName.Pen"/>
                                </AddonLabel>
                            </Addon>
                            <Addon AddonType="AddonType.Body">
                                <TextEdit Placeholder="@L["Placeholder:Write"]"
                                          @bind-Text="@Company.CompanyIdentificationNumber"/>
                            </Addon>
                        </Addons>
                    </Field>
                </Validation>
                <Validation MessageLocalizer="@LH.Localize">
                    <Field>
                        <FieldLabel>@L["Field:Name"]</FieldLabel>
                        <Addons>
                            <Addon AddonType="AddonType.Start">
                                <AddonLabel>
                                    <Icon Name="IconName.Pen"/>
                                </AddonLabel>
                            </Addon>
                            <Addon AddonType="AddonType.Body">
                                <TextEdit Placeholder="@L["Placeholder:Write"]"
                                          @bind-Text="@Company.Name"/>
                            </Addon>
                        </Addons>
                    </Field>
                </Validation>
                <Validation MessageLocalizer="@LH.Localize">
                    <Field>
                        <FieldLabel>@L["Field:DisplayName"]</FieldLabel>
                        <Addons>
                            <Addon AddonType="AddonType.Start">
                                <AddonLabel>
                                    <Icon Name="IconName.Pen"/>
                                </AddonLabel>
                            </Addon>
                            <Addon AddonType="AddonType.Body">
                                <TextEdit Placeholder="@L["Placeholder:Write"]"
                                          @bind-Text="@Company.DisplayName"/>
                            </Addon>
                        </Addons>
                    </Field>
                </Validation>
                <Validation MessageLocalizer="@LH.Localize">
                    <Field>
                        <FieldLabel>@L["Field:ShortDescription"]</FieldLabel>
                        <Addons>
                            <Addon AddonType="AddonType.Start">
                                <AddonLabel>
                                    <Icon Name="IconName.Pen"/>
                                </AddonLabel>
                            </Addon>
                            <Addon AddonType="AddonType.Body">
                                <MemoEdit @bind-Text="@Company.ShortDescription"/>
                            </Addon>
                        </Addons>
                    </Field>
                </Validation>
                <Validation MessageLocalizer="@LH.Localize">
                    <Field>
                        <FieldLabel>@L["Field:Website"]</FieldLabel>
                        <Addons>
                            <Addon AddonType="AddonType.Start">
                                <AddonLabel>
                                    <Icon Name="IconName.Pen"/>
                                </AddonLabel>
                            </Addon>
                            <Addon AddonType="AddonType.Body">
                                <TextEdit Placeholder="@L["Placeholder:Write"]"
                                          @bind-Text="@Company.Website"/>
                            </Addon>
                        </Addons>
                    </Field>
                </Validation>
            </Validations>
        </AccordionBody>
    </AccordionItem>
</Accordion>

<Accordion Margin="Margin.Is3.FromBottom">
    <AccordionItem Visible="true">
        <AccordionHeader>
            <Heading Size="HeadingSize.Is3">
                <AccordionToggle>@L["Header:FullDescription"]</AccordionToggle>
            </Heading>
        </AccordionHeader>
        <AccordionBody>
            //todo: full description rich text editor
        </AccordionBody>
    </AccordionItem>
</Accordion>

<Accordion Margin="Margin.Is3.FromBottom">
    <AccordionItem>
        <AccordionHeader>
            <Heading Size="HeadingSize.Is3">
                <AccordionToggle>@L["Header:Address"]</AccordionToggle>
            </Heading>
        </AccordionHeader>
        <AccordionBody>
            <WmAddressEdit @ref="_wmAddressEditRef"
                              Address="Address"
                              ReadOnly="false">
            </WmAddressEdit>
        </AccordionBody>
    </AccordionItem>
</Accordion>


@code {
    [Parameter] public Guid Id { get; set; }

    private string PageTitle { get; set; } = string.Empty;
    private bool CanCreateCompany { get; set; }
    public Validations CompanyValidationsRef { get; set; }
    private CreateUpdateCompanyAdminDto Company = new CreateUpdateCompanyAdminDto();
    private CreateUpdateAddressDto Address = new CreateUpdateAddressDto();
    private WmAddressEdit _wmAddressEditRef;

    protected override async Task OnInitializedAsync()
    {
        PageTitle = L["Page:AdministrationCreateCompany"];
        await base.OnInitializedAsync();
    }

    private async Task SetPermissionsAsync()
    {
        CanCreateCompany = await AuthorizationService
            .IsGrantedAsync(WebMarketplacePermissions.Companies.Create);
    }

    private async Task CreateAsync()
    {
        if (await _wmAddressEditRef.ValidateAllAsync() && await CompanyValidationsRef.ValidateAll())
        {
            var addressDto = await AddressAppService.CreateAsync(Address);

            Company.AddressId = addressDto.Id;
            // Company.FullDescription = // todo: full description rich text editor
            
            var companyDto = await CompanyAdminAppService.CreateAsync(Company);
            await GoToList();
        }
    }

    private async Task GoToList()
    {
        NavigationManager.NavigateTo("/administration/company/list");
    }

}