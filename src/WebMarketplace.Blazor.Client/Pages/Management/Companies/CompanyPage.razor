@page "/management/company"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.Extensions.Localization
@using Volo.Abp.AspNetCore.Components.Messages
@using Volo.Abp.AspNetCore.Components.Web
@using Volo.Abp.AspNetCore.Components.Web.Theming.PageToolbars
@using WebMarketplace.Addresses
@using WebMarketplace.Companies
@using WebMarketplace.Localization
@using WebMarketplace.Permissions
@inherits WmPageBase
@attribute [Authorize("SellerOnly")]
@inject IAuthorizationService AuthorizationService
@inject IAddressAppService AddressAppService
@inject ICompanySellerAppService CompanyAppService
@inject IStringLocalizer<WebMarketplaceResource> L
@inject AbpBlazorMessageLocalizerHelper<WebMarketplaceResource> LH
@inject IUiMessageService UiMessageService
@inject NavigationManager NavigationManager

<WmPageHeader Toolbar="@PageToolbar" BreadcrumbItems="@BreadcrumbItems" Header="@PageHeader" Title="@PageTitle"/>

<Accordion Margin="Margin.Is3.FromBottom">
    <AccordionItem Visible="true">
        <AccordionHeader>
            <Heading Size="HeadingSize.Is3">
                <AccordionToggle>@L["Header:BasicInfo"]</AccordionToggle>
            </Heading>
        </AccordionHeader>
        <AccordionBody>
            <Field>
                <FieldLabel>@L["Field:Id"]</FieldLabel>
                <Addons>
                    <Addon AddonType="AddonType.Start">
                        <AddonLabel>
                            <Icon Name="IconName.Table" />
                        </AddonLabel>
                    </Addon>
                    <Addon AddonType="AddonType.Body">
                        <TextEdit Placeholder="@L["Placeholder:Write"]"
                                  Text="@Company.Id.ToString()"
                                  ReadOnly="true" />
                    </Addon>
                </Addons>
            </Field>
            <Validations @ref="@CompanyValidationsRef" Model="@Company" ValidateOnLoad="false">
                <Validation MessageLocalizer="@LH.Localize">
                    <Field>
                        <FieldLabel>@L["Field:CompanyIdentificationNumber"]</FieldLabel>
                        <Addons>
                            <Addon AddonType="AddonType.Start">
                                <AddonLabel>
                                    <Icon Name="IconName.Pen"/>
                                </AddonLabel>
                            </Addon>
                            <Addon AddonType="AddonType.Body">
                                <TextEdit Placeholder="@L["Placeholder:Write"]"
                                          @bind-Text="@Company.CompanyIdentificationNumber"
                                          ReadOnly="true"/>
                            </Addon>
                        </Addons>
                    </Field>
                </Validation>
                <Validation MessageLocalizer="@LH.Localize">
                    <Field>
                        <FieldLabel>@L["Field:Name"]</FieldLabel>
                        <Addons>
                            <Addon AddonType="AddonType.Start">
                                <AddonLabel>
                                    <Icon Name="IconName.Pen"/>
                                </AddonLabel>
                            </Addon>
                            <Addon AddonType="AddonType.Body">
                                <TextEdit Placeholder="@L["Placeholder:Write"]"
                                          @bind-Text="@Company.Name"
                                          ReadOnly="true" />
                            </Addon>
                        </Addons>
                    </Field>
                </Validation>
                <Validation MessageLocalizer="@LH.Localize">
                    <Field>
                        <FieldLabel>@L["Field:DisplayName"]</FieldLabel>
                        <Addons>
                            <Addon AddonType="AddonType.Start">
                                <AddonLabel>
                                    <Icon Name="IconName.Pen"/>
                                </AddonLabel>
                            </Addon>
                            <Addon AddonType="AddonType.Body">
                                <TextEdit Placeholder="@L["Placeholder:Write"]"
                                          @bind-Text="@Company.DisplayName"
                                          ReadOnly="true"/>
                            </Addon>
                        </Addons>
                    </Field>
                </Validation>
                <Validation MessageLocalizer="@LH.Localize">
                    <Field>
                        <FieldLabel>@L["Field:ShortDescription"]</FieldLabel>
                        <Addons>
                            <Addon AddonType="AddonType.Start">
                                <AddonLabel>
                                    <Icon Name="IconName.Pen"/>
                                </AddonLabel>
                            </Addon>
                            <Addon AddonType="AddonType.Body">
                                <MemoEdit @bind-Text="@EditCompany.ShortDescription"/>
                            </Addon>
                        </Addons>
                    </Field>
                </Validation>
                <Validation MessageLocalizer="@LH.Localize">
                    <Field>
                        <FieldLabel>@L["Field:Website"]</FieldLabel>
                        <Addons>
                            <Addon AddonType="AddonType.Start">
                                <AddonLabel>
                                    <Icon Name="IconName.Pen"/>
                                </AddonLabel>
                            </Addon>
                            <Addon AddonType="AddonType.Body">
                                <TextEdit Placeholder="@L["Placeholder:Write"]"
                                          @bind-Text="@EditCompany.Website"/>
                            </Addon>
                        </Addons>
                    </Field>
                </Validation>
            </Validations>
        </AccordionBody>
    </AccordionItem>
</Accordion>

<Accordion Margin="Margin.Is3.FromBottom">
    <AccordionItem Visible="true">
        <AccordionHeader>
            <Heading Size="HeadingSize.Is3">
                <AccordionToggle>@L["Header:FullDescription"]</AccordionToggle>
            </Heading>
        </AccordionHeader>
        <AccordionBody>
            // todo: full description rich text editor EditCompany.FullDescription
        </AccordionBody>
    </AccordionItem>
</Accordion>

<Accordion Margin="Margin.Is3.FromBottom">
    <AccordionItem>
        <AccordionHeader>
            <Heading Size="HeadingSize.Is3">
                <AccordionToggle>@L["Header:Address"]</AccordionToggle>
            </Heading>
        </AccordionHeader>
        <AccordionBody>
            <WmAddressComponent @ref="WmAddressComponentRef"
                                Address="EditAddress"
                                Id="@Address.Id"
                                ReadOnly="false">
            </WmAddressComponent>
        </AccordionBody>
    </AccordionItem>
</Accordion>

@code {
    protected CompanyDto Company { get; set; } = new();
    protected UpdateCompanySellerDto EditCompany { get; set; } = new();
    protected AddressDto Address { get; set; } = new();
    protected CreateUpdateAddressDto EditAddress { get; set; } = new();
    protected bool CanEdit { get; set; } = false;
    
    protected Validations CompanyValidationsRef { get; set; }
    protected WmAddressComponent WmAddressComponentRef;


    protected override async Task OnInitializedAsync()
    {
        PageTitle = L["Page:Company"];
        PageHeader = L["Header:Company"];
        await GetDataAsync();
        await base.OnInitializedAsync();
    }

    protected override async Task SetPermissionsAsync()
    {
        CanEdit = await AuthorizationService.IsGrantedAsync(WebMarketplacePermissions.Companies.Update);
        await base.SetPermissionsAsync();
    }

    protected override Task SetBreadcrumbItemsAsync()
    {
        BreadcrumbItems.Add(new BreadcrumbItem(L["Menu:Management"], "/management"));
        BreadcrumbItems.Add(new BreadcrumbItem(L["Menu:Company"]));
        return base.SetBreadcrumbItemsAsync();
    }

    protected override Task SetToolBarAsync()
    {
        PageToolbar.AddButton(L["Action:Edit"],
            () => UpdateAsync(),
            IconName.Save,
            Color.Primary,
            !CanEdit);

        return base.SetToolBarAsync();
    }

    protected Task UpdateAsync()
    {
        NavigationManager.NavigateTo("/management/company/edit");
        return Task.CompletedTask;
    }
    
    protected async Task GetDataAsync()
    {
        Company = await CompanyAppService.GetAsync();
        EditCompany = ObjectMapper.Map<CompanyDto, UpdateCompanySellerDto>(Company);
        Address = await AddressAppService.GetAsync(Company.AddressId);
        EditAddress = ObjectMapper.Map<AddressDto, CreateUpdateAddressDto>(Address);
    }
}